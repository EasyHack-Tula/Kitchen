{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Xtron\\\\Documents\\\\GitHub\\\\Kitchen\\\\src\\\\Scripts\\\\CustomizedSteppers.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport SettingsIcon from \"@material-ui/icons/Settings\"; //import GroupAddIcon from \"@material-ui/icons/GroupAdd\";\n\nimport VideoLabelIcon from \"@material-ui/icons/VideoLabel\";\nimport StepConnector from \"@material-ui/core/StepConnector\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CheckBoxes from \"./CheckBoxes\";\nconst ColorlibConnector = withStyles({\n  alternativeLabel: {\n    top: 22,\n    position: \"absolute\"\n  },\n  active: {\n    \"& $line\": {\n      backgroundImage: \"linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)\"\n    }\n  },\n  completed: {\n    \"& $line\": {\n      backgroundImage: \"linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)\"\n    }\n  },\n  line: {\n    height: 3,\n    border: 0,\n    backgroundColor: \"#eaeaf0\",\n    borderRadius: 1\n  }\n})(StepConnector);\nconst useColorlibStepIconStyles = makeStyles({\n  root: {\n    backgroundColor: \"#ccc\",\n    zIndex: 1,\n    color: \"#fff\",\n    width: 50,\n    height: 50,\n    display: \"flex\",\n    borderRadius: \"50%\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  active: {\n    backgroundImage: \"linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)\",\n    boxShadow: \"0 4px 10px 0 rgba(0,0,0,.25)\"\n  },\n  completed: {\n    backgroundImage: \"linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)\"\n  }\n});\n\nfunction ColorlibStepIcon(props) {\n  _s();\n\n  const classes = useColorlibStepIconStyles();\n  const {\n    active,\n    completed\n  } = props;\n  const icons = {\n    1: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }, this),\n    2: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 12\n    }, this),\n    3: /*#__PURE__*/_jsxDEV(VideoLabelIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 12\n    }, this)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(classes.root, {\n      [classes.active]: active,\n      [classes.completed]: completed\n    }),\n    children: icons[String(props.icon)]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ColorlibStepIcon, \"TbUAg343/d/fVF4s63V6GVaUi8k=\", false, function () {\n  return [useColorlibStepIconStyles];\n});\n\n_c = ColorlibStepIcon;\nColorlibStepIcon.propTypes = {\n  /**\r\n   * Whether this step is active.\r\n   */\n  active: PropTypes.bool,\n\n  /**\r\n   * Mark the step as completed. Is passed to child components.\r\n   */\n  completed: PropTypes.bool,\n\n  /**\r\n   * The label displayed in the step icon.\r\n   */\n  icon: PropTypes.node\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\"\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nfunction getSteps() {\n  return [\"Select campaign settings\", \"Create an ad group\", \"Create an ad\"];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return \"Select campaign settings...\";\n\n    case 1:\n      return /*#__PURE__*/_jsxDEV(CheckBoxes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 20\n      }, this);\n\n    case 2:\n      return \"This is the bit I really care about!\";\n\n    default:\n      return \"Unknown step\";\n  }\n}\n\nexport default function CustomizedSteppers() {\n  _s2();\n\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Stepper, {\n      alternativeLabel: true,\n      activeStep: activeStep,\n      connector: /*#__PURE__*/_jsxDEV(ColorlibConnector, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 28\n      }, this),\n      children: steps.map(label => /*#__PURE__*/_jsxDEV(Step, {\n        children: /*#__PURE__*/_jsxDEV(StepLabel, {\n          StepIconComponent: ColorlibStepIcon,\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }, this)\n      }, label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: activeStep === steps.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.instructions,\n          children: \"All steps completed - you're finished\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleReset,\n          className: classes.button,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.instructions,\n          children: getStepContent(activeStep)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            disabled: activeStep === 0,\n            onClick: handleBack,\n            className: classes.button,\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleNext,\n            className: classes.button,\n            children: activeStep === steps.length - 1 ? \"Finish\" : \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(CustomizedSteppers, \"5/ANSN4aidVPv0P4apAyeUUfwXQ=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = CustomizedSteppers;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ColorlibStepIcon\");\n$RefreshReg$(_c2, \"CustomizedSteppers\");","map":{"version":3,"sources":["C:/Users/Xtron/Documents/GitHub/Kitchen/src/Scripts/CustomizedSteppers.js"],"names":["React","PropTypes","makeStyles","withStyles","clsx","Stepper","Step","StepLabel","SettingsIcon","VideoLabelIcon","StepConnector","Button","Typography","CheckBoxes","ColorlibConnector","alternativeLabel","top","position","active","backgroundImage","completed","line","height","border","backgroundColor","borderRadius","useColorlibStepIconStyles","root","zIndex","color","width","display","justifyContent","alignItems","boxShadow","ColorlibStepIcon","props","classes","icons","String","icon","propTypes","bool","node","useStyles","theme","button","marginRight","spacing","instructions","marginTop","marginBottom","getSteps","getStepContent","step","CustomizedSteppers","activeStep","setActiveStep","useState","steps","handleNext","prevActiveStep","handleBack","handleReset","map","label","length"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,0BAAvC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,6BAAzB,C,CACA;;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AAGA,MAAMC,iBAAiB,GAAGX,UAAU,CAAC;AACjCY,EAAAA,gBAAgB,EAAE;AACdC,IAAAA,GAAG,EAAE,EADS;AAEdC,IAAAA,QAAQ,EAAC;AAFK,GADe;AAKjCC,EAAAA,MAAM,EAAE;AACJ,eAAW;AACPC,MAAAA,eAAe,EACX;AAFG;AADP,GALyB;AAWjCC,EAAAA,SAAS,EAAE;AACP,eAAW;AACPD,MAAAA,eAAe,EACX;AAFG;AADJ,GAXsB;AAiBjCE,EAAAA,IAAI,EAAE;AACFC,IAAAA,MAAM,EAAE,CADN;AAEFC,IAAAA,MAAM,EAAE,CAFN;AAGFC,IAAAA,eAAe,EAAE,SAHf;AAIFC,IAAAA,YAAY,EAAE;AAJZ;AAjB2B,CAAD,CAAV,CAuBvBf,aAvBuB,CAA1B;AAyBA,MAAMgB,yBAAyB,GAAGxB,UAAU,CAAC;AACzCyB,EAAAA,IAAI,EAAE;AACFH,IAAAA,eAAe,EAAE,MADf;AAEFI,IAAAA,MAAM,EAAE,CAFN;AAGFC,IAAAA,KAAK,EAAE,MAHL;AAIFC,IAAAA,KAAK,EAAE,EAJL;AAKFR,IAAAA,MAAM,EAAE,EALN;AAMFS,IAAAA,OAAO,EAAE,MANP;AAOFN,IAAAA,YAAY,EAAE,KAPZ;AAQFO,IAAAA,cAAc,EAAE,QARd;AASFC,IAAAA,UAAU,EAAE;AATV,GADmC;AAYzCf,EAAAA,MAAM,EAAE;AACJC,IAAAA,eAAe,EACX,wFAFA;AAGJe,IAAAA,SAAS,EAAE;AAHP,GAZiC;AAiBzCd,EAAAA,SAAS,EAAE;AACPD,IAAAA,eAAe,EACX;AAFG;AAjB8B,CAAD,CAA5C;;AAuBA,SAASgB,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAC7B,QAAMC,OAAO,GAAGX,yBAAyB,EAAzC;AACA,QAAM;AAAER,IAAAA,MAAF;AAAUE,IAAAA;AAAV,MAAwBgB,KAA9B;AAEA,QAAME,KAAK,GAAG;AACV,oBAAG,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADO;AAEV,oBAAG,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAFO;AAGV,oBAAG,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAHO,GAAd;AAMA,sBACI;AACI,IAAA,SAAS,EAAElC,IAAI,CAACiC,OAAO,CAACV,IAAT,EAAe;AAC1B,OAACU,OAAO,CAACnB,MAAT,GAAkBA,MADQ;AAE1B,OAACmB,OAAO,CAACjB,SAAT,GAAqBA;AAFK,KAAf,CADnB;AAAA,cAMKkB,KAAK,CAACC,MAAM,CAACH,KAAK,CAACI,IAAP,CAAP;AANV;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GApBQL,gB;UACWT,yB;;;KADXS,gB;AAsBTA,gBAAgB,CAACM,SAAjB,GAA6B;AACzB;AACJ;AACA;AACIvB,EAAAA,MAAM,EAAEjB,SAAS,CAACyC,IAJO;;AAKzB;AACJ;AACA;AACItB,EAAAA,SAAS,EAAEnB,SAAS,CAACyC,IARI;;AASzB;AACJ;AACA;AACIF,EAAAA,IAAI,EAAEvC,SAAS,CAAC0C;AAZS,CAA7B;AAeA,MAAMC,SAAS,GAAG1C,UAAU,CAAE2C,KAAD,KAAY;AACrClB,EAAAA,IAAI,EAAE;AACFG,IAAAA,KAAK,EAAE;AADL,GAD+B;AAIrCgB,EAAAA,MAAM,EAAE;AACJC,IAAAA,WAAW,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADT,GAJ6B;AAOrCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,SAAS,EAAEL,KAAK,CAACG,OAAN,CAAc,CAAd,CADD;AAEVG,IAAAA,YAAY,EAAEN,KAAK,CAACG,OAAN,CAAc,CAAd;AAFJ;AAPuB,CAAZ,CAAD,CAA5B;;AAaA,SAASI,QAAT,GAAoB;AAChB,SAAO,CAAC,0BAAD,EAA6B,oBAA7B,EAAmD,cAAnD,CAAP;AACH;;AAED,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC1B,UAAQA,IAAR;AACI,SAAK,CAAL;AACI,aAAO,6BAAP;;AACJ,SAAK,CAAL;AACI,0BAAO,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAAP;;AACJ,SAAK,CAAL;AACI,aAAO,sCAAP;;AACJ;AACI,aAAO,cAAP;AARR;AAUH;;AAED,eAAe,SAASC,kBAAT,GAA8B;AAAA;;AACzC,QAAMlB,OAAO,GAAGO,SAAS,EAAzB;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8BzD,KAAK,CAAC0D,QAAN,CAAe,CAAf,CAApC;AACA,QAAMC,KAAK,GAAGP,QAAQ,EAAtB;;AAEA,QAAMQ,UAAU,GAAG,MAAM;AACrBH,IAAAA,aAAa,CAAEI,cAAD,IAAoBA,cAAc,GAAG,CAAtC,CAAb;AACH,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACrBL,IAAAA,aAAa,CAAEI,cAAD,IAAoBA,cAAc,GAAG,CAAtC,CAAb;AACH,GAFD;;AAIA,QAAME,WAAW,GAAG,MAAM;AACtBN,IAAAA,aAAa,CAAC,CAAD,CAAb;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAEpB,OAAO,CAACV,IAAxB;AAAA,4BACI,QAAC,OAAD;AACI,MAAA,gBAAgB,MADpB;AAEI,MAAA,UAAU,EAAE6B,UAFhB;AAGI,MAAA,SAAS,eAAE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,cAHf;AAAA,gBAKKG,KAAK,CAACK,GAAN,CAAWC,KAAD,iBACP,QAAC,IAAD;AAAA,+BACI,QAAC,SAAD;AAAW,UAAA,iBAAiB,EAAE9B,gBAA9B;AAAA,oBAAiD8B;AAAjD;AAAA;AAAA;AAAA;AAAA;AADJ,SAAWA,KAAX;AAAA;AAAA;AAAA;AAAA,cADH;AALL;AAAA;AAAA;AAAA;AAAA,YADJ,eAYI;AAAA,gBACKT,UAAU,KAAKG,KAAK,CAACO,MAArB,gBACG;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,SAAS,EAAE7B,OAAO,CAACY,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEc,WAAjB;AAA8B,UAAA,SAAS,EAAE1B,OAAO,CAACS,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,gBAUG;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,SAAS,EAAET,OAAO,CAACY,YAA/B;AAAA,oBACKI,cAAc,CAACG,UAAD;AADnB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAA,kCACI,QAAC,MAAD;AACI,YAAA,QAAQ,EAAEA,UAAU,KAAK,CAD7B;AAEI,YAAA,OAAO,EAAEM,UAFb;AAGI,YAAA,SAAS,EAAEzB,OAAO,CAACS,MAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAQI,QAAC,MAAD;AACI,YAAA,OAAO,EAAC,WADZ;AAEI,YAAA,KAAK,EAAC,SAFV;AAGI,YAAA,OAAO,EAAEc,UAHb;AAII,YAAA,SAAS,EAAEvB,OAAO,CAACS,MAJvB;AAAA,sBAMKU,UAAU,KAAKG,KAAK,CAACO,MAAN,GAAe,CAA9B,GAAkC,QAAlC,GAA6C;AANlD;AAAA;AAAA;AAAA;AAAA,kBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAXR;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkDH;;IAnEuBX,kB;UACJX,S;;;MADIW,kB","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\n//import GroupAddIcon from \"@material-ui/icons/GroupAdd\";\r\nimport VideoLabelIcon from \"@material-ui/icons/VideoLabel\";\r\nimport StepConnector from \"@material-ui/core/StepConnector\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport CheckBoxes from \"./CheckBoxes\";\r\n\r\n\r\nconst ColorlibConnector = withStyles({\r\n    alternativeLabel: {\r\n        top: 22,\r\n        position:\"absolute\",\r\n    },\r\n    active: {\r\n        \"& $line\": {\r\n            backgroundImage:\r\n                \"linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)\"\r\n        }\r\n    },\r\n    completed: {\r\n        \"& $line\": {\r\n            backgroundImage:\r\n                \"linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)\"\r\n        }\r\n    },\r\n    line: {\r\n        height: 3,\r\n        border: 0,\r\n        backgroundColor: \"#eaeaf0\",\r\n        borderRadius: 1\r\n    }\r\n})(StepConnector);\r\n\r\nconst useColorlibStepIconStyles = makeStyles({\r\n    root: {\r\n        backgroundColor: \"#ccc\",\r\n        zIndex: 1,\r\n        color: \"#fff\",\r\n        width: 50,\r\n        height: 50,\r\n        display: \"flex\",\r\n        borderRadius: \"50%\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    active: {\r\n        backgroundImage:\r\n            \"linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)\",\r\n        boxShadow: \"0 4px 10px 0 rgba(0,0,0,.25)\"\r\n    },\r\n    completed: {\r\n        backgroundImage:\r\n            \"linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)\"\r\n    }\r\n});\r\n\r\nfunction ColorlibStepIcon(props) {\r\n    const classes = useColorlibStepIconStyles();\r\n    const { active, completed } = props;\r\n\r\n    const icons = {\r\n        1: <SettingsIcon />,\r\n        2: <SettingsIcon />,\r\n        3: <VideoLabelIcon />\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className={clsx(classes.root, {\r\n                [classes.active]: active,\r\n                [classes.completed]: completed\r\n            })}\r\n        >\r\n            {icons[String(props.icon)]}\r\n        </div>\r\n    );\r\n}\r\n\r\nColorlibStepIcon.propTypes = {\r\n    /**\r\n     * Whether this step is active.\r\n     */\r\n    active: PropTypes.bool,\r\n    /**\r\n     * Mark the step as completed. Is passed to child components.\r\n     */\r\n    completed: PropTypes.bool,\r\n    /**\r\n     * The label displayed in the step icon.\r\n     */\r\n    icon: PropTypes.node\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"100%\"\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(1)\r\n    },\r\n    instructions: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nfunction getSteps() {\r\n    return [\"Select campaign settings\", \"Create an ad group\", \"Create an ad\"];\r\n}\r\n\r\nfunction getStepContent(step) {\r\n    switch (step) {\r\n        case 0:\r\n            return \"Select campaign settings...\";\r\n        case 1:\r\n            return <CheckBoxes/>;\r\n        case 2:\r\n            return \"This is the bit I really care about!\";\r\n        default:\r\n            return \"Unknown step\";\r\n    }\r\n}\r\n\r\nexport default function CustomizedSteppers() {\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const steps = getSteps();\r\n\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n    const handleReset = () => {\r\n        setActiveStep(0);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Stepper\r\n                alternativeLabel\r\n                activeStep={activeStep}\r\n                connector={<ColorlibConnector />}\r\n            >\r\n                {steps.map((label) => (\r\n                    <Step key={label}>\r\n                        <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\r\n                    </Step>\r\n                ))}\r\n            </Stepper>\r\n            <div>\r\n                {activeStep === steps.length ? (\r\n                    <div>\r\n                        <Typography className={classes.instructions}>\r\n                            All steps completed - you&apos;re finished\r\n                        </Typography>\r\n                        <Button onClick={handleReset} className={classes.button}>\r\n                            Reset\r\n                        </Button>\r\n                    </div>\r\n                ) : (\r\n                    <div>\r\n                        <Typography className={classes.instructions}>\r\n                            {getStepContent(activeStep)}\r\n                        </Typography>\r\n                        <div>\r\n                            <Button\r\n                                disabled={activeStep === 0}\r\n                                onClick={handleBack}\r\n                                className={classes.button}\r\n                            >\r\n                                Back\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={handleNext}\r\n                                className={classes.button}\r\n                            >\r\n                                {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
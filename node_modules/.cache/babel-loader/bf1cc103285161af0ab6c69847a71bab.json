{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Xtron\\\\Documents\\\\GitHub\\\\Kitchen\\\\src\\\\Scripts\\\\CheckBoxes.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  formControl: {\n    margin: theme.spacing(3)\n  }\n}));\nexport default function CheckboxesGroup() {\n  _s();\n\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    gilad: false,\n    jason: false,\n    antoine: false\n  }); //начальные настройки\n\n  const handleChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n  }; //изменение состояния\n\n\n  const {\n    gilad,\n    jason,\n    antoine\n  } = state;\n  const error = [gilad, jason, antoine].filter(v => v).length !== 3; //условие выполнения чекбоксов\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      required: true,\n      error: error,\n      component: \"fieldset\",\n      className: classes.formControl,\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        component: \"legend\",\n        children: \"\\u041E\\u0442\\u043C\\u0435\\u0442\\u044C\\u0442\\u0435 \\u0432\\u0441\\u0435 \\u0448\\u0430\\u0433\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: gilad,\n            onChange: handleChange,\n            name: \"gilad\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 34\n          }, this),\n          label: \"Gilad Gray\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: jason,\n            onChange: handleChange,\n            name: \"jason\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 34\n          }, this),\n          label: \"Jason Killian\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: antoine,\n            onChange: handleChange,\n            name: \"antoine\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 34\n          }, this),\n          label: \"Antoine Llorca\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n        children: \"\\u041E\\u0442\\u043C\\u0435\\u0442\\u044C\\u0442\\u0435 \\u0432\\u0441\\u0435 \\u0448\\u0430\\u0433\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      disabled: error,\n      children: \"Primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CheckboxesGroup, \"o63US0rn5UHAYnD0PaWHTm2MVCo=\", false, function () {\n  return [useStyles];\n});\n\n_c = CheckboxesGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckboxesGroup\");","map":{"version":3,"sources":["C:/Users/Xtron/Documents/GitHub/Kitchen/src/Scripts/CheckBoxes.js"],"names":["React","makeStyles","FormLabel","FormControl","FormGroup","FormControlLabel","FormHelperText","Checkbox","Button","useStyles","theme","root","display","formControl","margin","spacing","CheckboxesGroup","classes","state","setState","useState","gilad","jason","antoine","handleChange","event","target","name","checked","error","filter","v","length"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(3),\r\n    },\r\n}));\r\n\r\n\r\nexport default function CheckboxesGroup() {\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useState({\r\n        gilad: false,\r\n        jason: false,\r\n        antoine: false,\r\n    }); //начальные настройки\r\n\r\n    const handleChange = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n    }; //изменение состояния\r\n\r\n    const { gilad, jason, antoine } = state;\r\n    const error = [gilad, jason, antoine].filter((v) => v).length !== 3; //условие выполнения чекбоксов\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <FormControl required error={error} component=\"fieldset\" className={classes.formControl}>\r\n                <FormLabel component=\"legend\">Отметьте все шаги</FormLabel>\r\n                <FormGroup>\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={gilad} onChange={handleChange} name=\"gilad\" />}\r\n                        label=\"Gilad Gray\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={jason} onChange={handleChange} name=\"jason\" />}\r\n                        label=\"Jason Killian\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Checkbox checked={antoine} onChange={handleChange} name=\"antoine\" />}\r\n                        label=\"Antoine Llorca\"\r\n                    />\r\n                </FormGroup>\r\n                <FormHelperText>Отметьте все шаги</FormHelperText>\r\n            </FormControl>\r\n            <Button variant=\"contained\" color=\"primary\" disabled={error}>\r\n                Primary\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}